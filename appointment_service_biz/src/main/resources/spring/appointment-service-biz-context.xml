<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:util="http://www.springframework.org/schema/util"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
						  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						  http://www.springframework.org/schema/aop  
						  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
						  http://www.springframework.org/schema/context 
						  http://www.springframework.org/schema/context/spring-context-3.1.xsd 
						  http://www.springframework.org/schema/util  
						  http://www.springframework.org/schema/util/spring-util-3.1.xsd  
						  http://www.springframework.org/schema/tx  
						  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
   
    <context:annotation-config />
    
	<context:component-scan base-package="au.com.singtel.group.sdp.appointment.service" />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="locations">
	    <list>
	      <value>classpath:appointment_service/appointment_service_biz.properties</value>
	    </list>
	  </property>
	  <property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName" value="${jndi.name}"/>
	</bean>

   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="au.com.singtel.group.sdp.appointment.service.model" />
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            <prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
         </props>
      </property>
   </bean>

	<bean id="appointmentServiceDAO" class ="au.com.singtel.group.sdp.appointment.service.dao.impl.AppointmentServiceDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="checkAvailableAppointmentInteractionId" value="${checkavailableappointment.interactionid}" />
		<property name="createAppointmentNotificationId" value="${createappointment.interactionid}" />
	</bean>
	
	<bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:appointment_service/log4j.xml</value>
				<value>15000</value>
			</list>
		</property>
	</bean>
	
	<util:map id="jaxwsCustomProperties">

		<entry key="com.sun.xml.ws.request.timeout">
			<value type="java.lang.Integer">${appointment.service.request.timeout}</value>
		</entry>
		<entry key="com.sun.xml.ws.connect.timeout">
			<value type="java.lang.Integer">${appointment.service.connection.timeout}</value>
		</entry>
		<entry key="com.sun.xml.internal.ws.request.timeout">
			<value type="java.lang.Integer">${appointment.service.request.timeout}</value>
		</entry>
		<entry key="com.sun.xml.internal.ws.connect.timeout">
			<value type="java.lang.Integer">${appointment.service.connection.timeout}</value>
		</entry>
	</util:map>

	<bean id="nbnEnablerServiceClient" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
		<property name="serviceInterface" value="au.com.singtel.group.optus.oss.enabler.nbnenablerservice.v4_0_0.nbnenablerservice.NbnEnablerServiceEndpoint" />
		<property name="wsdlDocumentUrl" value="${nbn.service.client}" />
		<property name="serviceName" value="NbnEnablerServiceEndpointService" />
		<property name="portName" value="NbnEnablerServiceEndpointPort" />
		<property name="namespaceUri" value="http://www.group.singtel.com.au/optus/oss/enabler/NbnEnablerService/v4_0_0/NbnEnablerService" />
		<property name="customProperties" ref="jaxwsCustomProperties" />
	</bean>
	
		<bean id="ossfEnablerServiceClient" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean">
		<property name="serviceInterface" value="au.com.singtel.group.optus.oss.enabler.ossfenablerservice.v4_0_0.ossfenablerservice.OssfEnablerServiceEndpoint" />
		<property name="wsdlDocumentUrl" value="${ossf.service.client}" />
		<property name="serviceName" value="OssfEnablerServiceEndpointService" />
		<property name="portName" value="OssfEnablerServiceEndpointPort" />
		<property name="namespaceUri" value="http://www.group.singtel.com.au/optus/oss/enabler/OssfEnablerService/v4_0_0/OssfEnablerService" />
		<property name="customProperties" ref="jaxwsCustomProperties" />
	</bean>


</beans>
